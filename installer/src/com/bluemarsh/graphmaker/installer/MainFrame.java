/*
 * The contents of this file are subject to the terms of the Common Development
 * and Distribution License (the License). You may not use this file except in
 * compliance with the License.
 *
 * You can obtain a copy of the License at http://www.netbeans.org/cddl.html
 * or http://www.netbeans.org/cddl.txt.
 *
 * When distributing Covered Code, include this CDDL Header Notice in each file
 * and include the License file at http://www.netbeans.org/cddl.txt.
 * If applicable, add the following below the CDDL Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * The Original Software is GraphMaker. The Initial Developer of the Original
 * Software is Nathan L. Fiedler. Portions created by Nathan L. Fiedler
 * are Copyright (C) 2005-2009. All Rights Reserved.
 *
 * Contributor(s): Nathan L. Fiedler.
 *
 * $Id$
 */

package com.bluemarsh.graphmaker.installer;

import java.awt.CardLayout;
import java.awt.Container;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.ImageIcon;
import javax.swing.JFrame;

/**
 * The primary window of the installer.
 *
 * @author  Nathan Fiedler
 */
public class MainFrame extends JFrame implements ActionListener {
    /** silence compiler warnings */
    private static final long serialVersionUID = 1L;

    /**
     * Creates new form MainFrame.
     */
    public MainFrame() {
        // Set the content pane before constructing the components.
        setContentPane(new Content());
        initComponents();
        backButton.addActionListener(this);
        nextButton.addActionListener(this);
        exitButton.addActionListener(this);
        // Wacky form editor won't let us set the frame size.
        setSize(640, 420);
    }

    @Override
    public void actionPerformed(ActionEvent event) {
        Object src = event.getSource();
        if (src == backButton) {
            Controller.getDefault().back();
        } else if (src == nextButton) {
            Controller.getDefault().next();
        } else if (src == exitButton) {
            Controller.getDefault().stop();
        }
    }

    /**
     * Adds the given panel to the CardLayout-managed interior panel of this
     * window, using the panel's name.
     *
     * @param  panel  the panel to be added to the frame.
     */
    public void addPanel(InstallerPanel panel) {
        mainPanel.add(panel, panel.getName());
    }

    /**
     * Set the back button enabled state.
     *
     * @param  enabled  true to enable, false to disable.
     */
    public void setBackEnabled(boolean enabled) {
        backButton.setEnabled(enabled);
    }

    /**
     * Set the exit button enabled state.
     *
     * @param  enabled  true to enable, false to disable.
     */
    public void setExitEnabled(boolean enabled) {
        exitButton.setEnabled(enabled);
    }

    /**
     * Set the exit button's label.
     *
     * @param  label  button label.
     */
    public void setExitLabel(String label) {
        exitButton.setText(label);
    }

    /**
     * Set the next button enabled state.
     *
     * @param  enabled  true to enable, false to disable.
     */
    public void setNextEnabled(boolean enabled) {
        nextButton.setEnabled(enabled);
    }

    /**
     * Makes the given panel visible.
     *
     * @param  panel  panel to be displayed.
     */
    public void showPanel(InstallerPanel panel) {
        CardLayout layout = (CardLayout) mainPanel.getLayout();
        layout.show(mainPanel, panel.getName());
    }

    /**
     * Class Content exists purely to draw the background using an image.
     */
    private static class Content extends Container {
        /** silence compiler warnings */
        private static final long serialVersionUID = 1L;
        /** The background image. */
        private ImageIcon image;

        /**
         * Constructs a new instance of Content.
         */
        public Content() {
            image = new ImageIcon(Bundle.getResource("IMG_Background"));
        }

        @Override
        public void paint(Graphics g) {
            image.paintIcon(this, g, 0, 0);
            super.paint(g);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        mainPanel = new javax.swing.JPanel();
        spacerLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle(java.util.ResourceBundle.getBundle("com/bluemarsh/graphmaker/installer/Form").getString("LBL_Frame_Title"));
        setResizable(false);
        mainPanel.setLayout(new java.awt.CardLayout());

        mainPanel.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(12, 100, 17, 12);
        getContentPane().add(mainPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(spacerLabel, gridBagConstraints);

        backButton.setMnemonic(java.util.ResourceBundle.getBundle("com/bluemarsh/graphmaker/installer/Form").getString("KEY_BackButton").charAt(0));
        backButton.setText(java.util.ResourceBundle.getBundle("com/bluemarsh/graphmaker/installer/Form").getString("LBL_BackButton"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 12, 5);
        getContentPane().add(backButton, gridBagConstraints);

        nextButton.setMnemonic(java.util.ResourceBundle.getBundle("com/bluemarsh/graphmaker/installer/Form").getString("KEY_NextButton").charAt(0));
        nextButton.setText(java.util.ResourceBundle.getBundle("com/bluemarsh/graphmaker/installer/Form").getString("LBL_NextButton"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 12, 11);
        getContentPane().add(nextButton, gridBagConstraints);

        exitButton.setMnemonic(java.util.ResourceBundle.getBundle("com/bluemarsh/graphmaker/installer/Form").getString("KEY_ExitButton").charAt(0));
        exitButton.setText(java.util.ResourceBundle.getBundle("com/bluemarsh/graphmaker/installer/Form").getString("LBL_ExitButton"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 12, 12);
        getContentPane().add(exitButton, gridBagConstraints);

        pack();
    }
    // </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton nextButton;
    private javax.swing.JLabel spacerLabel;
    // End of variables declaration//GEN-END:variables
}
